TXT
1. Создать внешний репозиторий c названием TXT.
 
2. Клонировать репозиторий TXT на локальный компьютер.
git clone https://github.com/Neriievskyi/TXT.git

3. Внутри локального TXT создать файл “new.txt”.
touch new.txt

4. Добавить файл под гит.
git add new.txt
 
5. Закоммитить файл.
git commit -m "adding new file"

6. Отправить файл на внешний GitHub репозиторий.
git push

7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
cat >> new.txt
Anton Neriievskyi
36 years old
1 cat
600$
ctrl + c

8. Отправить изменения на внешний репозиторий.
git add new.txt
git commit -m "short info"

9. Создать файл preferences.txt
touch preferences.txt  

10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
movie: "Movie"
tv series: "Series"
meal: "meal"
season: "season"
country: "Country"

11. Создать файл skills.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
cat > skills.txt
Linux
Bash
Git
GitHub
API
HTTP/HTTPS
Web testing
Mobile testing
Proxy
VPN
SQL
JMeter
ctrl + C

12. Сделать коммит в одну строку.
git add skills.txt preferences.txt; git commit -m "skills and preferences"

13. Отправить сразу 2 файла на внешний репозиторий.
git push

14. На веб интерфейсе создать файл bug_report.txt.
15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
18. Синхронизировать внешний и локальный репозиторий TXT
git pull
 
 JSON
1. Создать внешний репозиторий c названием JSON.

2. Клонировать репозиторий JSON на локальный компьютер.
git clone https://github.com/Neriievskyi/JSON.git

3. Внутри локального JSON создать файл “new.json”.
touch new.json

4. Добавить файл под гит.
git add new.json

5. Закоммитить файл.
git commit -m "Short info about myself"

6. Отправить файл на внешний GitHub репозиторий.
git push

7. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
vim new.json
i
{
	"name": "Anton",
	"surname": "Neriievskyi",
	"age": 36,
	"pet": 1,
	"salaryDollar": 600
}
esc
:wq

8. Отправить изменения на внешний репозиторий.
git add new.json
git commit -m "Short info about myself"
git push

9. Создать файл preferences.json
touch preferences.json

10. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
vim preferences.json
i
{
	"movie": "RocknRolla",
	"series": "TheBigBangTheory",
	"meal": "potato",
	"season": "summer",
	"country": "Portugal"
}
esc
"wq

11. Создать файл skills.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
cat > skills.json
{
	"mySkills": ["Linux", "Bash", "Git", "GitHub", "API", "HTTP", "HTTPS", "WebTesting", "MobileTesting", "Proxy", "VPN", "SQL", "JMeter"]
}
ctrl + C
12. Отправить сразу 2 файла на внешний репозиторий.
git add skills.json preferences.json; git commit -m "skills and preferences"

13. На веб интерфейсе создать файл bug_report.json.
14. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
15. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
{
  "bugReport": {
    "description": 
    "stepsToReproduce":
    "actualResult":
    "expectedResult":
    "project":
    "build":
    "severity":
    "priority":
    "bugStatus":
    "author":
    "assignedTo":
    "environment":
    "attachedFiles":
  }
}

16. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
17. Синхронизировать внешний и локальный репозиторий JSON
git pull


XML
21. Создать внешний репозиторий c названием XML.
22. Клонировать репозиторий XML на локальный компьютер.
git clone https://github.com/Neriievskyi/XML.git

23. Внутри локального XML создать файл “new.xml”.
touch new.xml

24. Добавить файл под гит.
git add new.xml

25. Закоммитить файл.
git commit -m "Short info about myself"

26. Отправить файл на внешний GitHub репозиторий.
git push

27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
vim new.xml
i
<?xml version-"1.0" endcoding="UTF-8"?>
<new>
	<name>Anton</name>
	<surname>Neriievskyi</name>
	<age>36</age>
	<salary>600</salary>
</new>
esc
:wq

28. Отправить изменения на внешний репозиторий.
git add new.xml
git commit -m "Short info about myself"
git push

29. Создать файл preferences.xml
touch preferences.xml

30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
vim preferences.xml
i
<?xml version-"1.0" endcoding="UTF-8"?>
<preferences>
	<movie>RocknRolla</movie>
	<series>The Big Bang Theory</series>
	<food>Potato</food>
	<season>Summer</season>
	<country>Portugal</country>
</preferences>
esc
:wq

31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
touch skills.xml
vim skills.xml
i
<?xml version-"1.0" endcoding="UTF-8"?>
<skills>
	<QualityAssurance>Linux, Bash, Git, GitHub, API, HTTP/HTTPS, Web testing, Mobile testing, Proxy, VPN, SQL, JMeter</QualityAssurance>
</skills>
esc
:wq

32. Сделать коммит в одну строку.
git add skills.xml preferences.xml; git commit -m "My skills and preferences"

33. Отправить сразу 2 файла на внешний репозиторий.
git push

34. На веб интерфейсе создать файл bug_report.xml.
35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
<?xml version-"1.0" endcoding="UTF-8"?>
<bugReport>
  <description>...</description>
  <stepsToReproduce>...</stepsToReproduce>
  <actualResult>...</actualResult>
  <expectedResult>...</expectedResult>
  <project>...</project>
  <build>...</build>
  <severity>...</severity>
  <priority>...</priority>
  <bugStatus>...</bugStatus>
  <author>...</author>
  <assignedTo>...</assignedTo>
  <environment>...</environment>
  <attachedFiles>...</attachedFiles>
</bugReport>

37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
38. Синхронизировать внешний и локальный репозиторий XML
git pull
